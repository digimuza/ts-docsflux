[{"/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/index.tsx":"1","/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/reportWebVitals.ts":"2","/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/components/Documentation/index.tsx":"3","/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/components/Documentation/SideBar.tsx":"4","/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/components/Documentation/Card.tsx":"5","/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/_core/index.ts":"6","/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/components/Layout/index.tsx":"7","/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/_core/utils.ts":"8","/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/components/Documentation/Markdown.tsx":"9"},{"size":2102,"mtime":1612365231555,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1611824862677,"results":"12","hashOfConfig":"11"},{"size":2436,"mtime":1612371455045,"results":"13","hashOfConfig":"11"},{"size":3168,"mtime":1612370979846,"results":"14","hashOfConfig":"11"},{"size":2432,"mtime":1612366711675,"results":"15","hashOfConfig":"11"},{"size":4193,"mtime":1611826258526,"results":"16","hashOfConfig":"11"},{"size":5189,"mtime":1612372809006,"results":"17","hashOfConfig":"11"},{"size":1416,"mtime":1612366743447,"results":"18","hashOfConfig":"11"},{"size":323,"mtime":1612354023131,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"jp62jj",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/index.tsx",["41"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/Documentation\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { DocumentationMembers } from \"./_core\";\nimport axios from \"axios\";\nimport \"react-virtualized/styles.css\";\nimport * as P from \"ts-prime\";\ntype Data = {\n  docs: DocumentationMembers;\n  articles: {\n    readme: string;\n  };\n};\n\nconst getData = async () => {\n  const basePath = await P.waitUntilDefined(\n    () =>\n      document.getElementsByName(\"basePath\")?.item(0)?.getAttribute(\"content\"),\n    3000\n  );\n  const result = await axios.get(`${basePath}/data/data.json`);\n  return result.data as {\n    docs: DocumentationMembers;\n    articles: {\n      readme: string;\n    };\n  };\n};\n\nconst BasePathContext = createContext(\"\");\n\nexport function useBasePath() {\n  return useContext(BasePathContext);\n}\n\nfunction usePromise<T>(fn: () => Promise<T>, deps?: any[]): T | undefined {\n  const [state, setState] = useState<T | undefined>(undefined);\n  useEffect(() => {\n    fn().then((q) => {\n      setState(q);\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...(deps || [])]);\n\n  return state;\n}\n\nconst Load = () => {\n  const data = usePromise(() => getData());\n  const basePath = usePromise(() =>\n    P.waitUntilDefined(\n      () =>\n        document\n          .getElementsByName(\"basePath\")\n          ?.item(0)\n          ?.getAttribute(\"content\"),\n      3000\n    )\n  );\n\n  if (basePath == null) return null;\n  if (data == null) return null;\n\n  return (\n    <BasePathContext.Provider value={basePath}>\n      <App\n        key={\"app\"}\n        documentation={data.docs}\n        readme={data.articles.readme}\n      ></App>\n    </BasePathContext.Provider>\n  );\n};\n\nReactDOM.render(<Load />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["42","43"],"/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/reportWebVitals.ts",[],"/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/components/Documentation/index.tsx",["44"],"import React, { Fragment, useEffect } from \"react\";\nimport { DocumentationMembers, groupMembers } from \"../../_core\";\nimport { PrimaryLayout } from \"../Layout\";\nimport { Input } from \"antd\";\nimport { SideBar } from \"./SideBar\";\nimport { DocumentationCard } from \"./Card\";\nimport { observer } from \"mobx-react\";\nimport { makeAutoObservable } from \"mobx\";\nimport * as P from \"ts-prime\";\nimport { useHistory } from \"react-router-dom\";\nexport const SearchState = makeAutoObservable({\n  search: \"\",\n});\n\nexport async function scrollToHash(component: string) {\n  const main = await P.canFail(async () =>\n    P.waitUntilDefined(() => document.getElementById(\"main-view\"), 1000)\n  );\n  if (P.isError(main)) return;\n  const element = await P.canFail(async () =>\n    P.waitUntilDefined(() => document.querySelector(component), 3000)\n  );\n  if (P.isError(element)) return;\n  const topPos = element.getBoundingClientRect().top;\n  main.scrollTo({\n    top: topPos + main.scrollTop - 100, // scroll so that the element is at the top of the view\n    behavior: \"auto\", // smooth scroll\n  });\n}\n\nexport default observer(\n  (props: { documentation: DocumentationMembers; readme: string }) => {\n    const members = props.documentation.filter((q) => q.kind === \"Function\");\n    const groupedMembers = groupMembers(members);\n    useEffect(() => {\n      const path = window.location.hash.split(\"/\").splice(-1)[0];\n      scrollToHash(`#link-${path}`);\n    }, []);\n\n    return (\n      <PrimaryLayout\n        readme={props.readme}\n        sideMenu={\n          <Fragment>\n            <div style={{ padding: 10 }}>\n              <Input\n                size={\"large\"}\n                placeholder={\"Search\"}\n                onKeyUp={(q) => (SearchState.search = q.currentTarget.value)}\n              ></Input>\n            </div>\n            <SideBar groupedMembers={groupedMembers}></SideBar>\n          </Fragment>\n        }\n      >\n        {groupedMembers.map((q) => (\n          <div key={q.group}>\n            <div key={q.group}>\n              {q.members.map((q) => (\n                <Fragment key={q.canonicalReference}>\n                  <DocumentationCard\n                    key={q.canonicalReference}\n                    docMember={q}\n                  ></DocumentationCard>\n                  <div style={{ height: 10 }}></div>\n                </Fragment>\n              ))}\n            </div>\n          </div>\n        ))}\n      </PrimaryLayout>\n    );\n  }\n);\n","/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/components/Documentation/SideBar.tsx",[],"/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/components/Documentation/Card.tsx",[],"/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/_core/index.ts",[],"/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/components/Layout/index.tsx",[],"/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/_core/utils.ts",[],"/home/andmzr/Documents/Darbas/Projektai/xx/ts-docsflux/themes/ts-docsflux-ts-prime/src/components/Documentation/Markdown.tsx",[],{"ruleId":"45","severity":1,"message":"46","line":10,"column":6,"nodeType":"47","messageId":"48","endLine":10,"endColumn":10},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"45","severity":1,"message":"53","line":10,"column":10,"nodeType":"47","messageId":"48","endLine":10,"endColumn":20},"@typescript-eslint/no-unused-vars","'Data' is defined but never used.","Identifier","unusedVar","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]